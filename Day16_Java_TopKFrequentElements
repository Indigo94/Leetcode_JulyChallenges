public class Solution {
	public int[] topKFrequent(int[] nums, int k) {
		int[] finalKeyArray = new int[k];
		Map<Integer, Integer> map = new HashMap<Integer, Integer>();
		for (int number : nums) {
			map.put(number, map.getOrDefault(number, 0) + 1);
		}
		ArrayList<Map.Entry<Integer, Integer>> ar = new ArrayList(map.entrySet());
		Collections.sort(ar, new Comparator<Map.Entry<Integer, Integer>>() {

			public int compare(Map.Entry<Integer, Integer> o1, Map.Entry<Integer, Integer> o2) {
				return o2.getValue().compareTo(o1.getValue());
			}

		});
		int counter = 0;
		for (Map.Entry<Integer, Integer> loopingMap : ar) {
			finalKeyArray[counter++] = loopingMap.getKey();
			if (counter == k) {
				break;
			}
		}
		return finalKeyArray;
	}
  }
